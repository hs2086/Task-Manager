@model ToDoApp.Models.TaskItem

<div class="task-container">
    <div class="task-form">
        <h2>Edit Task</h2>
        
        <form asp-action="Edit" method="post">
            <div asp-validation-summary="All" class="text-danger"></div>
            <input type="hidden" asp-for="Id"/>
            <input type="hidden" asp-for="UserId" />

            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" value="@Model.Title" class="form-control" placeholder="Enter task title" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <textarea asp-for="Description" class="form-control" rows="4" placeholder="Enter task description"></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="DueDate" class="control-label"></label>
                <input asp-for="DueDate" type="datetime-local" class="form-control" />
                <span asp-validation-for="DueDate" class="text-danger"></span>
            </div>

            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="IsCompleted" /> 
                    @Html.DisplayNameFor(model => model.IsCompleted)
                </label>
            </div>

            <div class="form-actions">
                <button type="submit" class="btn btn-primary">Save</button>
                <a asp-action="Index" class="btn btn-secondary">Cancel</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script>
        // Set minimum datetime to now for the due date
        document.addEventListener('DOMContentLoaded', function() {
            const now = new Date();
            // Convert to local datetime string in format YYYY-MM-DDTHH:MM
            const localDateTime = new Date(now.getTime() - now.getTimezoneOffset() * 60000)
                .toISOString()
                .slice(0, 16);
            document.getElementById("DueDate").min = localDateTime;
            
            // Format the existing DueDate value for datetime-local input
            const dueDateInput = document.getElementById("DueDate");
            if (dueDateInput.value) {
                const dueDate = new Date(dueDateInput.value);
                const localDueDateTime = new Date(dueDate.getTime() - dueDate.getTimezoneOffset() * 60000)
                    .toISOString()
                    .slice(0, 16);
                dueDateInput.value = localDueDateTime;
            }
        });
    </script>
}

<style>
    .task-container {
        display: flex;
        justify-content: center;
        padding: 20px;
    }

    .task-form {
        width: 100%;
        max-width: 600px;
        background: #fff;
        padding: 30px;
        border-radius: 8px;
        box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
    }

    .task-form h2 {
        text-align: center;
        margin-bottom: 25px;
        color: #2c3e50;
    }

    .form-group {
        margin-bottom: 20px;
    }

    .control-label {
        display: block;
        margin-bottom: 8px;
        font-weight: 600;
        color: #495057;
    }

    .form-control {
        width: 100%;
        padding: 10px 15px;
        border: 1px solid #ced4da;
        border-radius: 4px;
        font-size: 16px;
        transition: border-color 0.15s ease-in-out;
    }

    .form-control:focus {
        border-color: #80bdff;
        outline: 0;
        box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
    }

    textarea.form-control {
        min-height: 120px;
        resize: vertical;
    }

    input[type="datetime-local"].form-control {
        padding: 9px 15px;
    }

    .form-actions {
        display: flex;
        justify-content: flex-end;
        gap: 10px;
        margin-top: 30px;
    }

    .btn {
        padding: 10px 20px;
        border-radius: 4px;
        font-size: 16px;
        cursor: pointer;
        transition: all 0.3s ease;
    }

    .btn-primary {
        background-color: #007bff;
        border: 1px solid #007bff;
        color: white;
    }

    .btn-primary:hover {
        background-color: #0069d9;
        border-color: #0062cc;
    }

    .btn-secondary {
        background-color: #6c757d;
        border: 1px solid #6c757d;
        color: white;
    }

    .btn-secondary:hover {
        background-color: #5a6268;
        border-color: #545b62;
    }

    .form-check {
        display: flex;
        align-items: center;
    }

    .form-check-input {
        margin-right: 10px;
    }

    .text-danger {
        font-size: 14px;
        margin-top: 5px;
        color: #dc3545;
    }

    @@media (max-width: 768px) {
        .task-form {
            padding: 20px;
        }
        
        .form-actions {
            flex-direction: column;
        }
        
        .btn {
            width: 100%;
            margin-bottom: 10px;
        }
    }
</style>